environment = [
    ['A','X','R','R','R'],
    ['O','O','O','X','B'],
    ['O','O','O','O','R']
]

def rewardShortPaths(env):
    res = []
    i = 0 # up or down
    j = 0 # only right

    def getminpath(env,i,j,arr,direction='right',pathcount=0,rewardnum=0):
        if i >= len(env) or i < 0:
            return
        if j >= len(env[0]) or j < 0:
            getminpath(env, i - 1, j - 1, arr, 'up', pathcount, rewardnum)
            getminpath(env, i + 1, j - 1, arr, 'down', pathcount, rewardnum)
            return

        if env[i][j] == 'B':
            pathcount = pathcount+1
            arr.append(rewardnum)
            arr.append(pathcount)
            res.append([arr.pop(), arr.pop()])
            return

        if env[i][j] == 'O' or env[i][j] == 'R':
            pathcount = pathcount + 1

        if env[i][j]=='R':
            rewardnum = rewardnum + 1
        if env[i][j] == 'X' and direction == 'right':
            getminpath(env, i - 1, j - 1, arr, 'up', pathcount, rewardnum)
            getminpath(env, i + 1, j - 1, arr, 'down', pathcount, rewardnum)
        elif env[i][j] == 'X' and direction == 'up':
            getminpath(env, i - 1, j + 1, arr, 'right', pathcount, rewardnum)
            getminpath(env, i, j, arr, 'down', pathcount, rewardnum)
        elif env[i][j]=='X'and direction=='down':
            getminpath(env, i, j, arr, 'up', pathcount, rewardnum)
            getminpath(env, i + 1, j + 1, arr, 'right', pathcount, rewardnum)
        else:
            getminpath(env, i, j + 1, arr, 'right', pathcount, rewardnum)


    def findAllPaths(env):
        arr = []
        getminpath(env, i, j + 1, arr)

    def analysisPaths(arr):
        min = float("inf")
        minIndex = 0
        for i in range(0,len(arr)):
            if arr[i][0]<min:
                min = arr[i][0]
                minIndex = i
            elif arr[i][0] == min:
                if arr[i][1]>arr[minIndex][1]:
                    min = arr[i][0]
                    minIndex = i

        return (arr[minIndex][0],arr[minIndex][1])

    findAllPaths(env)
    return analysisPaths(res)

res = rewardShortPaths(environment)
print(res)


